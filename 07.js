//폰켓몬

//당신은 최대한 다양한 종류의 폰켓몬을 가지길 원하기 때문에, 최대한 많은 종류의 폰켓몬을 포함해서 N/2마리를 선택하려 합니다. N마리 폰켓몬의 종류 번호가 담긴 배열 nums가 매개변수로 주어질 때, N/2마리의 폰켓몬을 선택하는 방법 중, 가장 많은 종류의 폰켓몬을 선택하는 방법을 찾아, 그때의 폰켓몬 종류 번호의 개수를 return 하도록 solution 함수를 완성해주세요.

//ex) [3,1,2,3] 일때 두개를 선택할 수 있는 경우의수
//3,1; 3,2; 3,3; 1,2; 1,3; 2,3
//에서 가질 수 있는 '종류 수'의 최댓값은 2
//같은 숫자가 나오면 제외시켜야함

//접근방식: nums안에서 N가지 종류를 파악한다.
//nums가 6이라고 종류가 6이아님!
//만약 [1,2,3,3]이라면 ...
//중복된 포켓몬을 선택했을때 종류의 수와 연관이 없는 것을 파악
//ex)[1,1,2,2,2,3,3,1] 서로 다른 숫자의 경우의수 알아볼꺼니까 중복값 없애고 계산해야함
//서로 다른 수가 뭔지 파악해야되니까??
//ex) [1,2,3] 결국 종류의 수를 구해야하는 것
//선택하는 방법을 일단 변수로 지정해야되나?

var nums = [3, 3, 3, 2, 2, 2, 2, 2, 2, 3]; // result = 2

function solution(nums) {
  const max = nums.length / 2;
  const arr = [...new Set(nums)];
  return arr.length > max ? max : arr.length;
}

console.log(solution(nums));

//간단하네..
//한마디로 내가 고를수 있는 숫자보다 선택지가 더 많으면 최대는 내가 고를 수 있는 숫자일꺼고;
//그게 아니면 선택지의 갯수(중복된 값이 없어진 값)
